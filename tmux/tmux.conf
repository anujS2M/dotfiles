set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g @continuum-save-interval '0'
set -g @resurrect-processes ':all:'
bind-key d run-shell "#{@resurrect-save-script-path} quiet" \; detach-client
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-hook-post-save-all 'eval $(xdotool getwindowgeometry --shell $WINDOWID); echo 0,$X,$Y,$WIDTH,$HEIGHT > $HOME/.tmux/resurrect/geometry'
set -g @resurrect-hook-pre-restore-all 'wmctrl -i -r $WINDOWID -e $(cat $HOME/.tmux/resurrect/geometry)'

# remap prefix from 'C-b' to 'C-a'
set-option -g prefix C-a
bind-key C-a send-prefix

bind -n M-[ previous-window
bind -n M-] next-window

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key b command-prompt -p "break-pane"

bind C-c new-window -c "#{pane_current_path}"
bind C-w kill-pane

bind -n M-z resize-pane -Z # Bind M-z to maximize a pane
bind -n M-k send-keys -R \; send-keys C-l \; clear-history

# Break out the current pane to a window
bind b break-pane -d

# Resizing Splits
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :10

# Rename session and window
bind C-n command-prompt -I "#{window_name}" "rename-window '%%'"

# bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Swap the current pane with the last active pane
bind v swap-pane -s '!' -t $TMUX_PANE

# split panes using \ and -
bind \\ split-window -h -c "#{pane_current_path}"
bind -n M-\\ split-window -h -c "#{pane_current_path}"

bind - split-window -v -c "#{pane_current_path}"
bind -n M-- split-window -v -c "#{pane_current_path}"

# reload config file
bind r source-file ~/.tmux.conf\; display "Reloaded"
# Open htop on pane
bind C-h send-keys "htop" Enter

set -g base-index 1
setw -g pane-base-index 1
set -g @yank_action 'copy-pipe-and-cancel' #'copy-pipe'
set -g mouse on # Enable mouse mode (tmux 2.1 and above)
set -g mode-keys vi

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# =====================================
# =========== TMUX COPY ===============
# =====================================

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# wrap default shell in reattach-to-user-namespace if available
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# =====================================
# ============== Theme ================
# =====================================

color_dark="colour232"
color_light="white"
color_session_text="colour39"
color_status_text="colour245"
color_main="colour6"
color_secondary="colour9"
color_level_ok="colour076"
color_level_stress="colour160"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"
set -g message-style "fg=$color_main,bg=$color_dark"
set -g status-style "fg=$color_status_text,bg=$color_dark"
set -g pane-active-border-style bg=default,fg=colour134
setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]ÓÇ∞#[fg=$color_dark,bg=$color_main] #I:#W #[fg=$color_main,bg=$color_dark]ÓÇ∞#[default]"
setw -g window-status-format " #I:#W "

# general status bar settings
set -g status on
set -g status-position bottom

# window segments in status line ÓÇ≤
set -g window-status-separator ""
set -g status-left-length 20
set -g status-right-length 100

wg_session="#[bg=$color_session_text] #S #[default]"
wg_battery="#{battery_color_status_fg} #{battery_icon} #{battery_percentage} #{battery_remain}#[default]"
wg_date="%h %d %H:%M"
wg_user_host="#[fg=$color_main]#(whoami)#[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag, üîç ^Z ,}#[default]"
wg_nw_speed="#{online_status} #[fg=$color_main]#($(echo $DOT_SOURCE)/tmux/network_speed.sh)#[default]"

set -g status-left "#[fg=$color_main,bg=$color_dark]$wg_date TMUX #[fg=$color_main,bg=$color_dark]$separator_powerline_right"
set -g status-right "#{prefix_highlight}$wg_is_zoomed $wg_user_host|$wg_nw_speed|#{sysstat_cpu}|#{sysstat_mem}|$wg_battery"

# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$color_level_ok]‚óè#[default]"
set -g @offline_icon "#[fg=$color_level_stress]‚óè#[default]"

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix 'Prefix['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

# =====================================
# ==== Unbind default key bindings=====
# =====================================

unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind '}'    # swap-pane -D
unbind '{'    # swap-pane -U
unbind ]
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left
unbind C-z #remove suspend action on sessions
unbind C-b #prefix
unbind C-x # Kill a window on pressing w

# Seamless navigation using vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
